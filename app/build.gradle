apply plugin: 'com.android.application'


def compileNativeCode = "true" == rootProject.findProperty("compile_native_code")


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "org.appspot.apprtc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName rootProject.ext.releaseVersionName

        sourceSets.main {
            java.srcDirs = [
                    "src/main/java",
            ]
            jniLibs.srcDir 'libs'
        }

        ndk {
            if(compileNativeCode) {
                abiFilters 'arm64-v8a'
            } else {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64', 'x86'
            }

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.9.0'

    implementation project(':libwebrtc')
}

